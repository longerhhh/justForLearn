<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1d717854-219d-4d53-9797-e89500c4be02" name="变更" comment="盛最多水的容器">
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/com/example/S.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/com/example/S.kt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/kotlin/com/example/T.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/com/example/P.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/com/example/P.kt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin File" />
        <option value="Kotlin Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jrt:///home/lgr/.local/share/JetBrains/Toolbox/apps/IDEA-E/ch-0/222.3345.148/jbr!/java.base/java/util/HashMap.class" root0="SKIP_INSPECTION" />
    <setting file="jrt:///home/lgr/.local/share/JetBrains/Toolbox/apps/IDEA-E/ch-0/222.3345.148/jbr!/java.base/java/util/HashSet.class" root0="SKIP_INSPECTION" />
  </component>
  <component name="KotlinCodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2NHXLGtJIlXVQMQJxYOAe8iqYXP" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/lgr/MyRepoInGithub/IdeaProjects/untitled7&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;
  }
}</component>
  <component name="RunManager" selected="Application.T">
    <configuration name="N" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.N" />
      <module name="untitled7" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="O" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.O" />
      <module name="untitled7" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="S" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.S" />
      <module name="untitled7" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="T" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.T" />
      <module name="untitled7" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SKt" type="JetRunConfigurationType" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.SKt" />
      <module name="untitled7" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.T" />
        <item itemvalue="Application.S" />
        <item itemvalue="Kotlin.SKt" />
        <item itemvalue="Application.O" />
        <item itemvalue="Application.N" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="1d717854-219d-4d53-9797-e89500c4be02" name="变更" comment="" />
      <created>1679321924514</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1679321924514</updated>
    </task>
    <task id="LOCAL-00001" summary="请你来实现一个 myAtoi(string s) 函数，使其能将字符串转换成一个 32 位有符号整数（类似 C/C++ 中的 atoi 函数）。&#10;&#10;函数 myAtoi(string s) 的算法如下：&#10;&#10;读入字符串并丢弃无用的前导空格&#10;检查下一个字符（假设还未到字符末尾）为正还是负号，读取该字符（如果有）。 确定最终结果是负数还是正数。 如果两者都不存在，则假定结果为正。&#10;读入下一个字符，直到到达下一个非数字字符或到达输入的结尾。字符串的其余部分将被忽略。&#10;将前面步骤读入的这些数字转换为整数（即，&quot;123&quot; -&gt; 123， &quot;0032&quot; -&gt; 32）。如果没有读入数字，则整数为 0 。必要时更改符号（从步骤 2 开始）。&#10;如果整数数超过 32 位有符号整数范围 [−231,  231 − 1] ，需要截断这个整数，使其保持在这个范围内。具体来说，小于 −231 的整数应该被固定为 −231 ，大于 231 − 1 的整数应该被固定为 231 − 1 。&#10;返回整数作为最终结果。&#10;注意：&#10;&#10;本题中的空白字符只包括空格字符 ' ' 。&#10;除前导空格或数字后的其余字符串外，请勿忽略 任何其他字符。&#10; &#10;&#10;示例 1：&#10;&#10;输入：s = &quot;42&quot;&#10;输出：42&#10;解释：加粗的字符串为已经读入的字符，插入符号是当前读取的字符。&#10;第 1 步：&quot;42&quot;（当前没有读入字符，因为没有前导空格）&#10;         ^&#10;第 2 步：&quot;42&quot;（当前没有读入字符，因为这里不存在 '-' 或者 '+'）&#10;         ^&#10;第 3 步：&quot;42&quot;（读入 &quot;42&quot;）&#10;           ^&#10;解析得到整数 42 。&#10;由于 &quot;42&quot; 在范围 [-231, 231 - 1] 内，最终结果为 42 。&#10;示例 2：&#10;&#10;输入：s = &quot;   -42&quot;&#10;输出：-42&#10;解释：&#10;第 1 步：&quot;   -42&quot;（读入前导空格，但忽视掉）&#10;            ^&#10;第 2 步：&quot;   -42&quot;（读入 '-' 字符，所以结果应该是负数）&#10;             ^&#10;第 3 步：&quot;   -42&quot;（读入 &quot;42&quot;）&#10;               ^&#10;解析得到整数 -42 。&#10;由于 &quot;-42&quot; 在范围 [-231, 231 - 1] 内，最终结果为 -42 。&#10;示例 3：&#10;&#10;输入：s = &quot;4193 with words&quot;&#10;输出：4193&#10;解释：&#10;第 1 步：&quot;4193 with words&quot;（当前没有读入字符，因为没有前导空格）&#10;         ^&#10;第 2 步：&quot;4193 with words&quot;（当前没有读入字符，因为这里不存在 '-' 或者 '+'）&#10;         ^&#10;第 3 步：&quot;4193 with words&quot;（读入 &quot;4193&quot;；由于下一个字符不是一个数字，所以读入停止）&#10;             ^&#10;解析得到整数 4193 。&#10;由于 &quot;4193&quot; 在范围 [-231, 231 - 1] 内，最终结果为 4193 。&#10; &#10;&#10;提示：&#10;&#10;0 &lt;= s.length &lt;= 200&#10;s 由英文字母（大写和小写）、数字（0-9）、' '、'+'、'-' 和 '.' 组成">
      <created>1682589601353</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1682589601353</updated>
    </task>
    <task id="LOCAL-00002" summary="回文数">
      <created>1682591589665</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1682591589665</updated>
    </task>
    <task id="LOCAL-00003" summary="正则表达式匹配">
      <created>1682850693124</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1682850693124</updated>
    </task>
    <task id="LOCAL-00004" summary="正则表达式匹配">
      <created>1682850842547</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1682850842547</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_NEW_TODO" value="false" />
    <ignored-roots>
      <path value="$PROJECT_DIR$" />
    </ignored-roots>
    <MESSAGE value="请你来实现一个 myAtoi(string s) 函数，使其能将字符串转换成一个 32 位有符号整数（类似 C/C++ 中的 atoi 函数）。&#10;&#10;函数 myAtoi(string s) 的算法如下：&#10;&#10;读入字符串并丢弃无用的前导空格&#10;检查下一个字符（假设还未到字符末尾）为正还是负号，读取该字符（如果有）。 确定最终结果是负数还是正数。 如果两者都不存在，则假定结果为正。&#10;读入下一个字符，直到到达下一个非数字字符或到达输入的结尾。字符串的其余部分将被忽略。&#10;将前面步骤读入的这些数字转换为整数（即，&quot;123&quot; -&gt; 123， &quot;0032&quot; -&gt; 32）。如果没有读入数字，则整数为 0 。必要时更改符号（从步骤 2 开始）。&#10;如果整数数超过 32 位有符号整数范围 [−231,  231 − 1] ，需要截断这个整数，使其保持在这个范围内。具体来说，小于 −231 的整数应该被固定为 −231 ，大于 231 − 1 的整数应该被固定为 231 − 1 。&#10;返回整数作为最终结果。&#10;注意：&#10;&#10;本题中的空白字符只包括空格字符 ' ' 。&#10;除前导空格或数字后的其余字符串外，请勿忽略 任何其他字符。&#10; &#10;&#10;示例 1：&#10;&#10;输入：s = &quot;42&quot;&#10;输出：42&#10;解释：加粗的字符串为已经读入的字符，插入符号是当前读取的字符。&#10;第 1 步：&quot;42&quot;（当前没有读入字符，因为没有前导空格）&#10;         ^&#10;第 2 步：&quot;42&quot;（当前没有读入字符，因为这里不存在 '-' 或者 '+'）&#10;         ^&#10;第 3 步：&quot;42&quot;（读入 &quot;42&quot;）&#10;           ^&#10;解析得到整数 42 。&#10;由于 &quot;42&quot; 在范围 [-231, 231 - 1] 内，最终结果为 42 。&#10;示例 2：&#10;&#10;输入：s = &quot;   -42&quot;&#10;输出：-42&#10;解释：&#10;第 1 步：&quot;   -42&quot;（读入前导空格，但忽视掉）&#10;            ^&#10;第 2 步：&quot;   -42&quot;（读入 '-' 字符，所以结果应该是负数）&#10;             ^&#10;第 3 步：&quot;   -42&quot;（读入 &quot;42&quot;）&#10;               ^&#10;解析得到整数 -42 。&#10;由于 &quot;-42&quot; 在范围 [-231, 231 - 1] 内，最终结果为 -42 。&#10;示例 3：&#10;&#10;输入：s = &quot;4193 with words&quot;&#10;输出：4193&#10;解释：&#10;第 1 步：&quot;4193 with words&quot;（当前没有读入字符，因为没有前导空格）&#10;         ^&#10;第 2 步：&quot;4193 with words&quot;（当前没有读入字符，因为这里不存在 '-' 或者 '+'）&#10;         ^&#10;第 3 步：&quot;4193 with words&quot;（读入 &quot;4193&quot;；由于下一个字符不是一个数字，所以读入停止）&#10;             ^&#10;解析得到整数 4193 。&#10;由于 &quot;4193&quot; 在范围 [-231, 231 - 1] 内，最终结果为 4193 。&#10; &#10;&#10;提示：&#10;&#10;0 &lt;= s.length &lt;= 200&#10;s 由英文字母（大写和小写）、数字（0-9）、' '、'+'、'-' 和 '.' 组成" />
    <MESSAGE value="回文数" />
    <MESSAGE value="盛最多水的容器" />
    <option name="LAST_COMMIT_MESSAGE" value="盛最多水的容器" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/B.java</url>
          <line>49</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/D.java</url>
          <line>179</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/H.java</url>
          <line>36</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/J.java</url>
          <line>27</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/M.java</url>
          <line>158</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/com/example/M.java</url>
          <line>59</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/com/example/T.java</url>
          <line>101</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/E.kt</url>
          <line>143</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>